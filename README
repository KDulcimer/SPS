Welcome to the Simple Packaging System!

The SPS is a new packaging method. It is built from the ground up, although
there are certainly a fair number of similarities to RPM packaging as that's
what I'm most familiar with. I've used RPM and Debian as resources while
building SPS.

Currently, this is in the planning stage. I don't know if this is entirely
feasible. If you happen to know that what I'm planning to do is impossible,
please don't tell me. I'd rather find out for myself. :-)

Why SPS?
I feel that most packaging systems try to do too much. What do you use your
packaging system for? You probably do 3 tasks with it:
1. Get new package lists.
2. Install new or updated packages.
3. Remove packages you no longer want.

What if a packaging system focused on just these things with room for
extensibility? What if things like:
-Suggests,
-Recommends,
-Priority,
-Post/pre/un-install scripts,
-Locking packages to prevent upgrading,
and much, much more were restricted to extensions? This would allow the core
system to focus on doing its job well.

When I helped start Unity Linux, the idea was to have a small, lightweight, and
nimble central distribution which would serve as a base for other distros. In
March 2011, I started to think "Well, why isn't our packaging system built with
the same ideals?" That is how SPS was born. I am still tinkering with it. I
realize that I may overlook key things, but hope is that the core will be
complete, and therefore anything I overlook can be added in as an extension.